{"version":3,"sources":["components/Card.js","components/CardSection.js","components/FormColor.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","dato","dat","style","background","Button","onClick","borrarColor","CardSection","arrayColor","map","elemento","indice","colorInicial","colorPicker","FormColor","inicialColor","coloresGuardados","JSON","parse","localStorage","getItem","useState","color","setColor","colores","setColores","useEffect","setItem","stringify","handleChange","event","value","target","name","Form","onSubmit","e","preventDefault","Group","controlId","Label","Row","Col","lg","Control","type","placeholder","onChange","id","defaultValue","title","nombre","arregloMofificado","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5001141e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"cards my-2 p-4\">\r\n      <h5 className=\"my-3 text-light\">{props.dato || props.dat}</h5>\r\n      <div\r\n        className=\"color-container\"\r\n        style={{ background: props.dato || props.dat }}\r\n      ></div>\r\n      <Button\r\n        className=\"rounded-pill my-3 bg-button w-75\"\r\n        onClick={() => props.borrarColor(props.dato || props.dat)}\r\n      >\r\n        Borrar\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardSection = (props) => {\r\n    return (\r\n        <section className=\"card-section container\">\r\n           {props.arrayColor.map((elemento, indice) => (\r\n        <Card\r\n          key={indice}\r\n          dato={elemento.colorInicial}\r\n          dat={elemento.colorPicker}\r\n          borrarColor={props.borrarColor}\r\n        ></Card>\r\n      ))}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CardSection;","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Row, Col } from \"react-bootstrap/\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CardSection from \"./CardSection\";\r\n\r\nconst FormColor = () => {\r\n  const inicialColor = {\r\n    colorInicial: \"\",\r\n    colorPicker: \"\",\r\n  };\r\n\r\n  let coloresGuardados = JSON.parse(localStorage.getItem(\"colores\")) || [];\r\n  const [color, setColor] = useState(inicialColor);\r\n  const [colores, setColores] = useState([coloresGuardados]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"colores\", JSON.stringify(colores));\r\n  }, [colores]);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    setColor({ ...color, [event.target.name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setColores([...colores, color]);\r\n    //limpiar el input\r\n    setColor(inicialColor);\r\n  };\r\n  \r\n  const borrarColor = (nombre)=> {\r\n    let arregloMofificado = colores.filter((color) => (color.colorPicker || color.colorInicial) !== nombre);\r\n   setColores(arregloMofificado);\r\n }\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"container row cards my-5 py-4\" onSubmit={handleSubmit}>\r\n        <Form.Group\r\n          className=\"mb-3 text-light d-flex flex-column\"\r\n          controlId=\"formColor\"\r\n        >\r\n          <Form.Label className=\"g-0 mb-3 fs-4\">Busca un Color</Form.Label>\r\n          <Row>\r\n            <Col lg={2}>\r\n              <div\r\n                className=\"color-container mb-3\"\r\n                style={{ background: color.colorInicial }}\r\n              ></div>\r\n            </Col>\r\n            <Col lg={8}>\r\n              <Form.Control\r\n                className=\"mb-3 bg-transparent rounded text-light\"\r\n                type=\"text\"\r\n                placeholder=\"Ingrese un color ej: Blue o #ffff\"\r\n                name=\"colorInicial\"\r\n                value={color.colorInicial}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Form.Label className=\"g-0 mb-3 fs-4 \">Elige un Color</Form.Label>\r\n          <Row>\r\n            <Col lg={2}>\r\n              <Form.Control\r\n                className=\"mb-3 w-75 rounded\"\r\n                type=\"color\"\r\n                id=\"ColorInput\"\r\n                defaultValue=\"#563d7c\"\r\n                title=\"Elige un color\"\r\n                name=\"colorPicker\"\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n            <Col lg={8}>\r\n              <Form.Control\r\n                className=\"mb-3  bg-transparent rounded text-light\"\r\n                type=\"text\"\r\n                placeholder=\"Color Escogido\"\r\n                value={color.colorPicker}\r\n              />\r\n            </Col>\r\n            <Col lg={2}>\r\n              <Button className=\"rounded-pill mb-3 bg-button\" type=\"submit\">\r\n                Guardar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Form>\r\n      <CardSection arrayColor={colores} borrarColor={borrarColor}></CardSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormColor;\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormColor from './components/FormColor';\n\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <FormColor></FormColor>\n     \n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}